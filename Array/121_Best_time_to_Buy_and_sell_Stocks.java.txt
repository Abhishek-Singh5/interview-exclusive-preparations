//  Brute force approach

class Solution {
    public int maxProfit(int[] nums) {
        int n = nums.length;

        int profit = 0;
        int max = 0;

        for(int i = 0; i < n; i++){
            for(int j = i+1; j < n; j++){
                profit = nums[j] - nums[i];
                max = Math.max(max, profit);
            }
        }

        return max;
    }
}


// Optimal Approach

class Solution {
    public int maxProfit(int[] prices) {
        int n = prices.length;

        int profit = 0;
        int max = 0;
        
        for(int i = 0; i < n-1; i++){
            int minPrice = prices[i];

            profit = prices[i+1] - minPrice;
            max = Math.max(max, profit);
        }

        return max;
    }
}